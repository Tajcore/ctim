name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['master', 'main']
    paths-ignore:
      - 'docs/**'
      - 'compose/test_integration/digitalocean/spec.yaml'

  push:
    branches: ['master', 'main']
    paths-ignore:
      - 'docs/**'
      - 'compose/test_integration/digitalocean/spec.yaml'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      # Consider using pre-commit.ci for open source project
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  # With no caching at all the entire ci process takes 4m 30s to complete!
  pytest:
    needs: [linter]
    runs-on: ubuntu-latest
    env:
      DJANGO_USE_LOCAL_ENV: "true"
      DJANGO_ALLOWED_HOSTS: localhost,0.0.0.0,127.0.0.1
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ctim
      POSTGRES_USER: debug
      POSTGRES_PASSWORD: debug
      DATABASE_URL: "postgres://debug:debug@postgres:5432/ctim"
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_ENVIRONMENT: GithubCI
      SENTRY_TRACES_SAMPLE_RATE: 1.0
      USE_DOCKER: "yes"
      IPYTHONDIR: /app/.ipython
      REDIS_URL: redis://redis:6379/0

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Clear Python Cache
        run: |
          find . -name '__pycache__' -exec rm -rf {} +
          find . -name '*.pyc' -exec rm -f {} +

      - name: Build and Start the Stack
        run: |
          docker compose -f test_integration.yml build django
          docker-compose -f test_integration.yml up -d django

      - name: Run DB Migrations
        run: docker compose -f test_integration.yml run --rm django python manage.py migrate

      - name: Run Django Tests on users
        run: docker compose -f test_integration.yml run --rm django python manage.py test ctim.users.tests

      - name: Run Django Tests on ctia
        run: docker compose -f test_integration.yml run --rm django python manage.py test ctim.ctia.tests

      - name: Tear down the Stack
        run: docker compose -f test_integration.yml down


  release:
    needs: [pytest, linter]
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GH_TOKEN }}
